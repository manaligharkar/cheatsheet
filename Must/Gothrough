Helm-Mock--https://www.youtube.com/watch?v=kGWTovo8tRg&list=PL8klaCXyIuQ6DCqQoeAiTOdcvucm3U97p
Devops Girl -Mock interview: https://www.youtube.com/watch?v=Z_bbozP6ZW4&list=PLLYW3zEOaqlLShAk9pd4FQ34KOpY7EJAq&index=6


k8s Architecture:
Redundancy, deploy rplicas on multiple hosts--So managing is done by k8s
Orchestion--desired/current
dirrenece-->swarm/k8s--> swarm is basic , rollbase access control ,  cannnot automaticaly scale up instances

master -> apiserver/etcd/scheduler/controller
kubectl --> talk to apiservr, scheduler--checks node avaibilty as per requiremet/due to taint defined on master/work wil b assioned on 
worker node,duty of controller is to see desired state is acheived or not
etcd--acts like databse--stores values of cluster is no-sql database key-value pair

 --> worker1 worker2 worker3
worker--kubelet/crE(container runtime engine)/kube-proxy
=================================================
==============
merge/rebase-->designed for same purpose tahts is to integrate one branch to another branch, But they do it in diffrent ways
If i m working on new feature peoject on dedicated branch and one of my team member does commit on develop branch and that new commit is relevant to feature which i am working on then i would need to incororate new commits my feature branch.
Merge--new merge comit on my feature-thats ties historie of both braches
Rebase--it moves feature branch on tip of commit of devop branch
it moves entire feature brach to begin on tip of development branch incorporting all new commits.--clean project history. 
Git sqaush--> cmbining commits --that can be achive with rebase --interactive--rewite repo history
master--prod code+develop-preprod code/
new feature--create brach from dev brach---pul crequest and thats is merged into dev bracnch nad that feaute branch will be deleted
--->release/hotfix/feature

