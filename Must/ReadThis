From last 5 yrs-in DevOps--tools used--k8s/docker/AKS/jenkins/git/prometheus/grafana/shell scripting
K8s--either i preapre my own helm chart or sometime drect;y pull from artifaoryhub and modified according to need,persistance idenity
created various manifest.yml files , network policies,statefulset deplyments--fr sticky identity fr databases pods--write-headless svc and read clusterIP
headless--as we want to assign to specifc pod, clusterIP-NOne,user selctor fr pod selection

worked on ingress routing rules/most;y used metallb.
worked o istio virtual services/destination rules for canary deplyments.
Regading jenkis: worte jenkins pipeline--used docker agent/mavne/gradle/k8s/, confured email, sonar qualitycheck into jenkins files.
connecting jenkins with kubernetes cluster
multibranch
alos wrote dockerfiles


Eureka service--is for registering service IP chnages regostering--so that all microservices can commect with each other with updated IPs.--service discovery
k8s-->
sevice manifest having lectory--key:value nad in deplyment--spec--pod-->label key:value

================
datree cli tool for -->yaml validation,schema validation,policy check--image tag/liveness probs/cpu menry reservations
Datree, which helps in identifying misconfigurations in Kubernetes manifest files or helm chartsâ€”an excellent fit for CI pipelines. 
=================
HPA
Horizontal scaling means that the response to increased load is to deploy more Pods.
kubectl apply -f https://k8s.io/examples/application/php-apache.yaml
kubectl autoscale deployment php-apache --cpu-percent=50 --min=1 --max=10
declaative way:
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: php-apache
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: php-apache
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
=========================================================
