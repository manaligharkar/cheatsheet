Jenkins 2.319.1
Jenkins Pipeline-->
commitbasedJob-Configure Job -Build trgger-Githubhook for gitscm polling-->then come to github for confuguring webhook.
In case agent is docker then-->https://www.jenkins.io/doc/book/pipeline/docker/
By default, for containerized stage, Jenkins does:
pick any agent,
create new empty workspace,
clone pipeline code into it,
mount this new workspace into container.--/root/.jenkins/workspace/

pipeline {
    agent {
        docker {
            image 'maven:3.8.1-adoptopenjdk-11'
            args '-v $HOME/.m2:/root/.m2'
        }
    }
    stages {
        stage('Build') {
            steps {
                sh 'mvn -B'
            }
        }
    }
}
=====================================
Regarding Shared Libraries--watch-- https://www.youtube.com/watch?v=bGDyGH13k1g
https://github.com/DeekshithSN/shared-library
https://github.com/DeekshithSN/sample-web-application/blob/master/Jenkinsfile2

Its concept of having common pipeline code for reusability in multiple other pipeleine.
ex:maven code is common fr most app
directory structure in jenkins repo -which u wl define in Manage jenkins-configure system-->global shared librarry
--vars  : having .groovy
--src
--resources
---In jenkins file--> define explicitly @Librarry: and then in steps
Example used here is finding Warning count from Maven logs.
=====================================
Next step is add sonar stage for static code qulity check-->https://github.com/DeekshithSN/sample-web-application/tree/sonar-jenkins
stage('Quality Gate Status Check'){
                  steps{
                      script{
			      withSonarQubeEnv('sonarserver') { 
			      sh "mvn clean sonar:sonar"
                       	     	}
			      timeout(time: 1, unit: 'HOURS') {
			      def qg = waitForQualityGate()
				      if (qg.status != 'OK') {
					   error "Pipeline aborted due to quality gate failure: ${qg.status}"
				      }
                    		}
		    	    sh "mvn clean install"
		  
                 	}
================================
For K8s+jenkins pipeline--must watch--> https://www.youtube.com/watch?v=adG0vq5boL8&t=5038s  --3 hrs video--excellent 

To see defaults variable-->http://IPofJenkins:8080/env-vars.html/ ex>BUILD_URL
*Multibranch pipeline --scans braches for jenkins files in given repo url:https://github.com/manaligharkar/manalitest1.git and perform build as per chnages at given time periodically defined
in the configuration.
#email configuration throgh-mailhog docker image.
docker pull mailhog/mailhog
docker run -d -p 1025:1025 -p 8025:8025 mailhog/mailhog
Then use public IP : http://13.234.66.187:8025/
To configure in manage jenkins-->configure system--> SMTP server--use private Ip of server and Port 1025 , u can test giving ur email-->it finaly redirects to  http://13.234.66.187:8025/
#mail pipeline JOB :
pipeline {
    agent any

    stages {
        stage('Hello') {
            steps {
                echo 'Hello World'
            }
            post {
		always {
			mail bcc: '', body: "<br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: ${env.BUILD_URL}", cc: '', charset: 'UTF-8', from: '', mimeType: 'text/html', replyTo: '', subject: "${currentBuild.result} CI: Project name -> ${env.JOB_NAME}", to: "manaligharkar@gmail.com";  
		}
	}
        }
    }
    
}
==========================================================
Jenkins Automated Build Trigger On Github Pull Request: https://devopscube.com/jenkins-build-trigger-github-pull-request/
https://devopscube.com/jenkins-multibranch-pipeline-tutorial/
plugin--Github Pull Request Builder

